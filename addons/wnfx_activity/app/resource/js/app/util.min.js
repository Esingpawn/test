 function loadFont(font) {
	var width_now, span = document.createElement("span");
	span.innerHTML = "gW@i#Q!T";
	span.style.visibility = "hidden";
	span.style.fontSize = "50px";
	document.body.appendChild(span);
	width_now = span.offsetWidth;
	span.style.fontFamily = font;
	setTimeout(function(){document.body.removeChild(span);span = null;});
};
window.onload = function() {
	loadFont("Muiext");
	loadFont("FontAwesome")
};
(function(window) {
	'use strict';
	var console = window.console || {log: function() {}};
	util.decode = function(a) {
		return unescape(a.replace(/\\(u[0-9a-fA-F]{4})/gm, "%$1"))
	};
	util.tips = function(msg, speed) {
		speed || (speed = 1500);
		var modalobj = $("#tips-container");
		0 == modalobj.length && ($(document.body).append('<div id="tips-container" class="text-center"><span></span></div>'), modalobj = $("#tips-container"));
		var reg = /^\".*\"$/;
		msg = reg.test(msg) ? eval(msg) : util.decode(msg), modalobj.hide().find("span").html(msg), $("#tips-container").fadeIn(), $("#tips-container").fadeOut(speed)
	};
	util.randomChar = function(l){
		var  x="0123456789qwertyuioplkjhgfdsazxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM";
		var  tmp="";
		//var timestamp = new Date().getTime();
		for(var i=0;i < l;i++)  {
			tmp  +=  x.charAt(Math.ceil(Math.random()*100000000)%x.length);
		}
		return tmp;
	};
	util.video = function(a, b, c) {
		require(["webuploader"]);
		var templates=new Array();
		var Rndid = util.randomChar(32);
		templates["video.html"]='<div class="webuploader-pick"></div><div id="rt_'+Rndid+'" style="position: absolute; top: 0px; width:100%; height:100%; overflow: hidden; bottom: auto; right: auto;"><input type="file" name="file" class="webuploader-element-invisible video-input" accept="video/*"><label style="opacity: 0; width: 100%; height: 100%; display: block; cursor: pointer; background: rgb(255, 255, 255);"></label></div>';
		a = $(a), a.html(templates["video.html"]).addClass('webuploader-container');
		var r = a.find('#rt_'+Rndid)
			, i = util.querystring("i");
		r.find('label').on('click',function(e){
			r.find('.video-input').click();
		}),r.find('.video-input').on('change',function(e){
			util.loading();
			var _this = this
				, file
				, files
				, videoName
				, fileSize = 50*1024
				, videoType;
			files = $(this).prop('files');
			fileSize = c && c.fileSize ? c.fileSize : fileSize;
			if (files.length > 0) {
				file = files[0];
				if (fileSize*1024 < file.size){
					util.loading().close();
					util.tips('请上传小于 ' + fileSize + 'k 的文件');
					$(this).prop("value","");
					return;
				}
				videoType = file.type;
				videoName = file.name;
				setTimeout(function(){
					var formData = new FormData();
					formData.append("file", file);
					formData.append("name", videoName);
					$.ajax({
						url: '../app/index.php?i=' + i + '&c=entry&m=wnfx_activity&do=mobile&r=utility.file.upload&type=video',
						type: 'post',
						data: formData,
						timeout: 4194304,//超时时间设置，单位毫秒					
						async: false,
						cache: false,
						contentType: false,
						processData: false,
						success: function(data) {
							//console.log(data);
							util.loading().close();
							var json = JSON.parse(data), message = '上传成功';
							if(json.error.code==1){
								message = json.error.message;
							}else{
								if($.isFunction(b)) b(json);
							}
							$(_this).val('');
							setTimeout(function(){								
								util.tips(message)
							}, 500);
						},
						error: function(XMLHttpRequest, textStatus, errorThrown) {
							//_this.submitFail(textStatus || errorThrown);
						}
					});
				}, 100);
			}else{
				util.loading().close();
			}
		}),a.prev().delegate(".file-panel span", "click",function(e){
			var obj = $(this)
				,attachid = obj.parents('.file-item').attr('data-id');
			util.loading();
			$.post('../app/index.php?i=' + i + '&c=entry&m=wnfx_activity&do=mobile&r=utility.file.delete', {id: attachid}, function(data) {
				util.loading().close();
				if(!data.error){
					obj.parents('.js-video-item').remove();
					obj.parents('.js-video').hide();
					obj.parents('.file-item').find('input').val('');
				}
				console.log("你删除了一个视频");
			}, 'json');
		});
	}
	util.thumb=function(a,b,c){require(["webuploader"]);var templates=new Array();var Rndid=util.randomChar(32);templates["image.html"]='<div class="webuploader-pick"></div><div id="rt_'+Rndid+'" style="position: absolute; top: 0px; width:100%; height:100%; overflow: hidden; bottom: auto; right: auto;"><input type="file" name="file" class="webuploader-element-invisible thumb-input"><label style="opacity: 0; width: 100%; height: 100%; display: block; cursor: pointer; background: rgb(255, 255, 255);"></label></div>';a=$(a),a.html(templates["image.html"]).addClass('webuploader-container');var r=a.find('#rt_'+Rndid);r.find('label').on('click',function(e){r.find('.thumb-input').click()}),r.find('.thumb-input').on('change',function(e){util.loading();var _this=this,file,files,imageName,imageType,i=util.querystring("i");files=$(this).prop('files');if(files.length>0){file=files[0];imageType=file.type;imageName=file.name;setTimeout(function(){var formData=new FormData();formData.append("file",file);formData.append("name",imageName);$.ajax({url:'../app/index.php?i='+i+'&c=entry&m=wnfx_activity&do=mobile&r=utility.file.upload&type=thumb',type:'post',data:formData,timeout:4194304,async:false,cache:false,contentType:false,processData:false,success:function(data){util.loading().close();var json=JSON.parse(data),message='上传成功';if(json.error.code==1){message=json.error.message}else{if($.isFunction(b))b(json)}$(_this).val('');setTimeout(function(){util.tips(message)},500)},error:function(XMLHttpRequest,textStatus,errorThrown){}})},100)}})}
	util.img = function(a, b, c) {
		require(["webuploader", "cropper", "previewer"]);
		var Rndid = util.randomChar(32);
		var templates=new Array();
		templates["image.html"]='<div class="webuploader-pick"></div><div id="rt_'+Rndid+'" style="position: absolute; top: 0px; width:100%; height:100%; overflow: hidden; bottom: auto; right: auto;"><input type="file" name="file" class="webuploader-element-invisible avatar-input" accept="image/*"><label style="opacity: 0; width: 100%; height: 100%; display: block; cursor: pointer; background: rgb(255, 255, 255);"></label></div>';
		a = $(a), a.html(templates["image.html"]).addClass('webuploader-container');
		var r = a.find('#rt_'+Rndid);
		r.find('label').on('click',function(e){
			r.find('.avatar-input').click();
		}),r.find('.avatar-input').on('change',function(e){
			CropAvatar.change($(this));
		}),a.prev().delegate(".file-panel span", "click",function(e){
			CropAvatar.del($(this));
		});
		var o, imageName, imageType = 'image/jpeg', i = util.querystring("i"), j = util.querystring("j"),
			CropAvatar = {
				change: function(f) {
					var files,file;
					files = f.prop('files');
					if (files.length > 0) {
						file = files[0];
						imageType = file.type;
						imageName = file.name;
						if (this.isImageFile(file)) {
							if (this.url) {
								URL.revokeObjectURL(this.url); // Revoke the old one
							}
							this.url = URL.createObjectURL(file);
							this.renderCrop();//渲染裁切窗口
							this.startCropper();
							
						}else{
							util.tips('请选择图片类型');
						}
					}
				},
				isImageFile: function(file) {
					if (file.type) {
						return /^image\/\w+$/.test(file.type);
					} else {
						return /\.(jpg|jpeg|png|gif)$/.test(file);
					}
				},
				startCropper: function() {
					var _this = this, a;
					o = $(document.body).find('.avatar-wrapper');
					a = o.find("img");
					//console.log(this.url);
					if (this.active) {
						a.cropper('replace', this.url);
					} else {
						a.cropper({
							aspectRatio: c.aspectRatio?c.aspectRatio:NaN,
							preview: c.preview?c.preview:'',
							viewMode: 1,
							dragMode: 'move',
							autoCropArea: 0.75,
							restore:!1,
							cropBoxMovable:1,
							cropBoxResizable:c.resizable
						}),
						o.find(".js-submit").on("click",function() {
							util.loading();
							setTimeout(function(){
								var _width, _height,pxSize=c.pxSize?c.pxSize:750;
								if (_this.getImageSize().width > pxSize){
									_width = _height = pxSize;
								}else{
									_width =_this.getImageSize().width, _height= _this.getImageSize().height;
								}
								console.log(_width+','+_height);
								var result = a.cropper('getCroppedCanvas', {width: _width, height: _height}, imageType);
								var Base64Url = result.toDataURL(imageType, 0.85);
								_this.ajaxUpload(Base64Url);
							},100);
							return false;
						}),
						o.find(".js-cancel").one("click",function() {
							_this.stopCropper();
                            o.remove();
                        });
						this.active = true;
					}
				},
				getImageSize: function() {
					var img = new Image();
					img.src = o.find("img").attr("src");
					return {width: img.width, height: img.height};
				},
				stopCropper: function() {
					if (this.active) {
						o.find("img").cropper('destroy');
						o.find("img").remove();
						this.active = false;
					}
					r.find('.avatar-input').val('');
				},
				 readBlobAsDataURL: function (blob, callback) {
					var a = new FileReader();
					a.onload = function(e) {callback(e.target.result);};
					a.readAsDataURL(blob);
				}
				,
				ajaxUpload: function(Base64Url) {
					var _this = this;
					//var file = new File([this.Base64UrlToBlob(Base64Url, imageType)], imageName,{type: imageType});
					//console.log(file);
					var formData = new FormData();
					//formData.append("file", file);
					formData.append("file", this.Base64UrlToBlob(Base64Url, imageType));
					formData.append("name", imageName);
					//console.log(formData.get('name'));
					$.ajax({
						url: '../app/index.php?i=' + i + '&c=entry&m=wnfx_activity&do=mobile&r=utility.file.upload',
						type: 'post',
						data: formData,
						timeout: 4194304,//超时时间设置，单位毫秒  					
						async: false,
						cache: false,
						contentType: false,
						processData: false,
						success: function(data) {
							//console.log(data);
							util.loading().close();
							_this.submitDone(data);
						},
						error: function(XMLHttpRequest, textStatus, errorThrown) {
							_this.submitFail(textStatus || errorThrown);
						}
					});
				},
				submitDone: function(data) {
					var _this = this,json = JSON.parse(data),message = '上传成功';
					if($.isFunction(b)) b(json);
					if(json.error.code==1) message = json.error.message;
					setTimeout(function(){o.css({'opacity':0,'transform':'translate3d(0,-100%,0)','-webkit-transform':'translate3d(0,-100%,0)'});});
					setTimeout(function(){util.tips(message);_this.cropDone();},500);
					//修复微擎附件uniacid、uid为0问题
					$.post('../app/index.php?i=' + i + '&c=entry&m=wnfx_activity&do=mobile&r=utility.file.update',{id:json.id});
				},
				submitFail: function(msg) {
					this.alert(msg);
				},
				cropDone: function() {
					o.remove();
					this.stopCropper();
				},
				alert: function(msg) {
					var $alert = ['<div class="alert alert-danger avatar-alert alert-dismissable">', '<button type="button" class="close" data-dismiss="alert">&times;</button>', msg, '</div>'].join('');
				},
				Base64UrlToBlob: function(urlData, filetype) {
					//去掉url的头，并转换为byte
					var bytes = window.atob(urlData.split(',')[1]);
		
					//处理异常,将ascii码小于0的转换为大于0
					var ab = new ArrayBuffer(bytes.length);
					var ia = new Uint8Array(ab);
					for (var i = 0; i < bytes.length; i++) {
						ia[i] = bytes.charCodeAt(i);
					}
					// 类型
					if (filetype === '' || !filetype) {
						filetype = 'image/png';
					}
					return new Blob([ab], {type: filetype});
				},
				renderCrop: function() {
					// 渲染Crop
					var _wh = $(window).height();
					var cropElement = '<div class="avatar-wrapper fadeInDownBig animated js-avatar-preview avatar-preview""><img id="imageData" src="' + this.url + '"><div class="bar-action mui-clearfix"><a href="javascript:;" class="mui-pull-left js-cancel">取消</a> <a href="javascript:;" class="mui-pull-right mui-text-right js-submit">选取</a></div></div>'
					//this.$__E.children(':first').before(cropElement);
					$(document.body).prepend(cropElement);
					$(document.body).find('.avatar-wrapper').css({position:"relative",'z-index':"9999",height: _wh + "px",'-webkit-transition':'-webkit-transform .5s,opacity .3s','transition':'transform .5s,opacity .3s'}).removeClass('animated');
					wx.miniProgram.getEnv(function(res){
						if (res.miniprogram) {//小程序环境
							var top = '-48px';
							if (util.ios()){
								top = '-78px'
							}
							$(document.body).find('.avatar-wrapper').css('top', top);
						}
					})
				},
				del: function(obj) {
					var attachid = obj.parents('.file-item').attr('data-id');
					util.loading();
					$.post('../app/index.php?i=' + i + '&c=entry&m=wnfx_activity&do=mobile&r=utility.file.delete', {id: attachid}, function(data) {
						util.loading().close();
						if(!data.error){
							obj.parents('.js-thumb-item').remove();
							obj.parents('.js-thumb').hide();
							obj.parents('.file-item').find('input').val('');
						}
						console.log("你删除了一张图片");
					}, 'json');
				}
		}
	};
	util.location = function(callback,key) {
		var api_url = "//apis.map.qq.com/tools/geolocation/min?key=2SJBZ-MOXRX-ZNZ4C-ZHNJ2-EHRZT-RWFQ7&referer=myapp";
		require([api_url], function (){
			var geolocation = new qq.maps.Geolocation();
			var options = {timeout: 9000};
			function showPosition(position) {
				var p = $.getCookie("position")==null ? '' : JSON.parse($.getCookie("position"));
				position.ucity = p.ucity ? p.ucity : '';
				$.setCookie("position", JSON.stringify(position), 's3600');
				if($.isFunction(callback)) {
					callback(position);
				}else{
					window.location.reload();
				}
			};
			function showErr() {
				alert('获取位置失败，请检查GPS是否开启，并确保站点域名和远程附件成功开启HTTPS');
			};
			geolocation.getLocation(showPosition, showErr, options);
		});
	};
	util.initAdinfo = function(lat, lng, callback) {
		$.ajax({
			url:'//apis.map.qq.com/ws/geocoder/v1/',
			type:"get",
			dataType:'jsonp',
			data:{
				location:lat+","+lng,
				key:"2SJBZ-MOXRX-ZNZ4C-ZHNJ2-EHRZT-RWFQ7",
				get_poi:0,
				output: "jsonp" 
		　　},
			jsonp:"callback",
			jsonpCallback:"QQmap",
			success: function(res){
				console.log(res.status);
				var address  = res.result.formatted_addresses.recommend,
					city     = res.result.ad_info.city,
					province = res.result.ad_info.province,
					position = {lat:lat, lng:lng, addr:address, city:city, ucity:''};
				$.setCookie("position", JSON.stringify(position), 'd1');	
				if($.isFunction(callback)) {
					callback(position);
				}else{
					window.location.reload();
				}
			}
		});
	};
	util.ios = function() {
		var u = navigator.userAgent;
		var isIOS = !!u.match(/\(i[^;]+;( U;)? CPU.+Mac OS X/);
		if (isIOS) return true;
	};
	util.pad = function(num, n) {  
		var len = num.toString().length;  
		while(len < n) {  
			num = "0" + num;  
			len++;  
		}  
		return num;  
	};
	util.idcard = function(str) {
		var patternMainLand = /^\d{6}(18|19|20)?\d{2}(0[1-9]|1[012])(0[1-9]|[12]\d|3[01])\d{3}(\d|[xX])$/;//大陆
		var patternHongkong = /^((\s?[A-Za-z])|([A-Za-z]{2}))\d{6}(\([0−9aA]\)|[0-9aA])$/;//香港
		var patternTaiwan = /^[a-zA-Z][0-9]{9}$/;//台湾
		var patternMacao = /^[1|5|7][0-9]{6}\([0-9Aa]\)/;//澳门
		if (patternMainLand.test(str) || patternHongkong.test(str) || patternTaiwan.test(str) || patternMacao.test(str)) 
			return true;
		else
			return false;
	};
	util.mobile = function(str) {
		var pattern = /^[1][3-9]\d{9}$|^([6|9])\d{7}$|^[0][9]\d{8}$|^[6]([8|6])\d{5}$/;
		if (pattern.test(str)) 
			return true;
		else
			return false;
	};
	util.isWeixin = function() {
		var u = navigator.userAgent.toLowerCase();
		var wechat = u.match(/MicroMessenger/i)=="micromessenger" ? true : false;
		if (wechat) return true;
	}
	util.program = {
		navigate:function(url, thisRoute) {//控制页面跳转---小程序、公众号、非微信跳转方式
			//console.log(url.split("?")[1]);
			var param = this.urlParam(url.split("?")[1]!=undefined ? url.split("?")[1].replace(/=/g,":").split('&') : url);
			
			this.isMiniProgram(function(res){//判断是否是小程序页面的回调函数
				if (res) {//小程序页面
					var _url = encodeURIComponent(url), currentUrl = window.location.href;
					if (currentUrl.indexOf('from=wxapp') < 0) {
						location.href = url;
						return false;
					}
					//console.log(param);
					if (param['r']!=thisRoute){
						switch (param['r']) {
							case 'home':
								wx.miniProgram.switchTab({
									url: '/wnfx_activity/pages/index/index', 
									fail: function (e) {
										location.href = url;
									}
								});
								break;
							case 'records':
								if (param['done']!=undefined){
									wx.miniProgram.switchTab({
										url: '/wnfx_activity/pages/order/order?url='+_url, 
										fail: function (e) {
											location.href = url;
										}
									})
								}else{
									wx.miniProgram.navigateTo({
										url: '/wnfx_activity/pages/webview/index?url='+_url,
										fail: function(res) {
											location.href = url;
										}
									})
								}
								break;
							case 'member':
								wx.miniProgram.switchTab({
									url: '/wnfx_activity/pages/user/user',
									fail: function(res) {
										location.href = url;
									}
								});
								break;
							default:
								wx.miniProgram.navigateTo({
									url: '/wnfx_activity/pages/webview/index?url='+_url,
									fail: function(res) {
										location.href = url;
									}
								});
							break;
						}
					}else{
						if (param['r']!=undefined || _url){
							wx.miniProgram.navigateTo({
								url: '/wnfx_activity/pages/webview/index?url='+_url, 
								fail: function (e) {
									location.href = url;
								}
							});
						}else{
							alert('连接异常：' + param['r']);
						}
					}
				} else {
					location.href = url;
				}
			})
		},
		isMiniProgram:function(callback) { //是否为小程序环境
			//是否在微信环境
			if (!util.isWeixin()) {
				callback(false);
			} else {
				//微信API获取当前运行环境
				wx.miniProgram.getEnv(function(res){
					if (res.miniprogram) {//小程序环境
						callback(true);
					} else {
						callback(false);
					}
				})
			}
		},
		urlParam:function(arr) {
		　　var obj = {};
		　　for (var i = 0; i < arr.length; i++) {
		　　　　var split = arr[i].split(':');
		　　　　obj[split[0]] = split[1];
		　　}			
		　　return obj;
		}
	}
})(window);